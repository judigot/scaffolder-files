app:
  Http:
    Controllers:
      - CREATE_FILE(BaseController.php --template /Templates/backend/laravel/BaseController.txt)
      - CREATE_FILE(AuthController.php --conditions hasUsers=true --template /Templates/backend/laravel/AuthController.txt)
      - CREATE_MULTIPLE_FILES({{tableNamePascalCaseSingular}}Controller.php --template /Templates/backend/laravel/Controller.txt)
    Resources:
      - CREATE_MULTIPLE_FILES({{tableNamePascalCaseSingular}}Resource.php --template /Templates/backend/laravel/Resource.txt)
  Repositories:
    - CREATE_FILE(BaseRepository.php --template /Templates/backend/laravel/BaseRepository.txt)
    - CREATE_FILE(BaseInterface.php --template /Templates/backend/laravel/BaseInterface.txt)
    - CREATE_MULTIPLE_FILES({{tableNamePascalCaseSingular}}Repository.php --template /Templates/backend/laravel/Repository.txt)
  Services:
    - CREATE_FILE(BaseService.php --template /Templates/backend/laravel/BaseService.txt)
    - CREATE_MULTIPLE_FILES({{tableNamePascalCaseSingular}}Service.php --template /Templates/backend/laravel/Service.txt)
  Models:
    - CREATE_MULTIPLE_FILES({{tableNamePascalCaseSingular}}.php --template /Templates/backend/laravel/Model.txt)
  Providers:
    - CREATE_FILE(AppServiceProvider.php --template /Templates/backend/laravel/AppServiceProvider.txt)
routes:
  - CREATE_FILE(api.php --template /Templates/backend/laravel/api.txt)
  - CREATE_MULTIPLE_FILES({{tableNameKebabCasePlural}}.php --template /Templates/backend/laravel/Route.txt)
frontend:
  src:
    hooks:
      CREATE_DYNAMIC_FOLDERS({{tableNameKebabCaseSingular}}):
        - CREATE_MULTIPLE_FILES(use{{tableNamePascalCaseSingular}}.ts --use-related-table --template /Templates/frontend/React-Hook.txt)
        - CREATE_FILE(api.ts --template /Templates/backend/laravel/api.txt)
        - CREATE_MULTIPLE_FILES(use{{tableNamePascalCaseSingular}}.tsx --template /Templates/frontend/React-Hook.txt)
    interfaces:
      - CREATE_MULTIPLE_FILES(I{{tableNamePascalCaseSingular}}.ts --template /Templates/frontend/TypeScript-Interface.txt)
src:
  main:
    java:
      com:
        example:
          api:
            controller:
              - CREATE_MULTIPLE_FILES({{tableNamePascalCaseSingular}}Controller.java --template /Templates/backend/springboot/Controller.txt)
            service:
              - CREATE_MULTIPLE_FILES({{tableNamePascalCaseSingular}}Service.java --template /Templates/backend/springboot/Service.txt)
            repository:
              - CREATE_MULTIPLE_FILES({{tableNamePascalCaseSingular}}Repository.java --template /Templates/backend/springboot/Repository.txt)
            entity:
              - CREATE_MULTIPLE_FILES({{tableNamePascalCaseSingular}}.java --template /Templates/backend/springboot/Entity.txt)
            dto:
              - CREATE_MULTIPLE_FILES({{tableNamePascalCaseSingular}}Dto.java --template /Templates/backend/springboot/Dto.txt)
            exception:
              - CREATE_FILE(ResourceNotFoundException.java)
              - CREATE_FILE(GlobalExceptionHandler.java)
    resources:
      - CREATE_FILE(application.properties)
      - CREATE_FILE(application-dev.properties)
      - CREATE_FILE(application-prod.properties)
      - CREATE_FOLDER(static)
      - CREATE_FOLDER(templates)
  test:
    java:
      com:
        example:
          api:
            controller:
              - CREATE_MULTIPLE_FILES({{tableNamePascalCaseSingular}}ControllerTest.java)
            service:
              - CREATE_MULTIPLE_FILES({{tableNamePascalCaseSingular}}ServiceTest.java)
            repository:
              - CREATE_MULTIPLE_FILES({{tableNamePascalCaseSingular}}RepositoryTest.java)