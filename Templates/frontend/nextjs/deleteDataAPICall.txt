/**
 * Deletes a {{tableNamePascalCaseSingular}} by ID
 * @param id The ID of the {{tableNamePascalCaseSingular}} to delete
 * @returns Promise resolving to void on successful deletion
 */
export const delete{{tableNamePascalCaseSingular}} = async (id: number | string): Promise<void> => {
  try {
    const response = await fetch(`/api/{{tableNameKebabCasePlural}}/${String(id)}`, {
      method: 'DELETE',
      headers: {
        Accept: 'application/json',
        'Content-Type': 'application/json',
      },
    });

    if (!response.ok) {
      throw new Error(`HTTP error: ${String(response.status)}`);
    }
    
    // Success - no need to return data
    return;
  } catch (error: unknown) {
    if (typeof error === 'string') {
      throw new Error(`Failed to delete {{tableNameCamelCaseSingular}}: ${error}`);
    }
    if (error instanceof Error) {
      throw new Error(`Failed to delete {{tableNameCamelCaseSingular}}: ${String(error.message)}`);
    }
    throw new Error('An unknown error occurred');
  }
}; 