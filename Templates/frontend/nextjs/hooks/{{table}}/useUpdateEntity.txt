import { useMutation, useQueryClient, UseMutationOptions } from '@tanstack/react-query';
import { update{{tableNamePascalCaseSingular}} } from '@/lib/api/{{tableNameKebabCaseSingular}}/update{{tableNamePascalCaseSingular}}';
import { I{{tableNamePascalCaseSingular}} } from '@/interfaces/I{{tableNamePascalCaseSingular}}';

export const useUpdate{{tableNamePascalCaseSingular}} = (
  id: number | string,
  options?: Omit<
    UseMutationOptions<I{{tableNamePascalCaseSingular}}, Error, Partial<I{{tableNamePascalCaseSingular}}>>,
    'mutationFn'
  >,
) => {
  const queryClient = useQueryClient();

  return useMutation({
    mutationFn: (data: Partial<I{{tableNamePascalCaseSingular}}>) =>
      update{{tableNamePascalCaseSingular}}(id, data),
    onSuccess: () => {
      queryClient.invalidateQueries({ queryKey: ['{{tableNameCamelCasePlural}}'] });
      queryClient.invalidateQueries({ queryKey: ['{{tableNameCamelCaseSingular}}', id] });
    },
    ...options,
  });
};
