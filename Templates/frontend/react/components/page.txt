'use client';

import React from 'react';
import { QueryClient, HydrationBoundary, dehydrate } from '@tanstack/react-query';
import { {{tableNameCamelCaseSingular}}Keys } from '@/hooks/{{tableNameKebabCaseSingular}}/use{{tableNamePascalCaseSingular}}.ts';
import {{tableNamePascalCaseSingular}}Component from './{{tableNamePascalCaseSingular}}Component.tsx';
import { api } from '@/hooks/{{tableNameKebabCaseSingular}}/api.ts';

export async function generate{{tableNamePascalCaseSingular}}StaticProps() {
  const queryClient = new QueryClient();
  await queryClient.prefetchQuery({
    queryKey: {{tableNameCamelCaseSingular}}Keys.lists(),
    queryFn: api.getAll
  });

  return {
    dehydratedState: dehydrate(queryClient),
  };
}

interface I{{tableNamePascalCaseSingular}}PageProps {
  dehydratedState: unknown;
}

export default function {{tableNamePascalCaseSingular}}Page({
  dehydratedState,
}: I{{tableNamePascalCaseSingular}}PageProps) {
  return (
    <HydrationBoundary state={dehydratedState}>
      <div className="container mx-auto py-8">
        <h1 className="text-4xl font-bold mb-8">{{tableNamePascalCaseSingular}} Management</h1>
        <{{tableNamePascalCaseSingular}}Component />
      </div>
    </HydrationBoundary>
  );
}
